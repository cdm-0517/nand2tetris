// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[6..8], a=ta, b=tb, c=tc, d=td, e=te, f=tf, g=tg, h=th);

    RAM64(in=in, load=ta, address=address[0..5], out=oa);
    RAM64(in=in, load=tb, address=address[0..5], out=ob);
    RAM64(in=in, load=tc, address=address[0..5], out=oc);
    RAM64(in=in, load=td, address=address[0..5], out=od);
    RAM64(in=in, load=te, address=address[0..5], out=oe);
    RAM64(in=in, load=tf, address=address[0..5], out=of);
    RAM64(in=in, load=tg, address=address[0..5], out=og);
    RAM64(in=in, load=th, address=address[0..5], out=oh);

    Mux8Way16(a=oa, b=ob, c=oc, d=od, e=oe, f=of, g=og, h=oh, sel=address[6..8], out=out);
}