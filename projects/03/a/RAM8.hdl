// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=load, sel=address, a=ta, b=tb, c=tc, d=td, e=te, f=tf, g=tg, h=th);

    Register(in=in, load=ta, out=oa);
    Register(in=in, load=tb, out=ob);
    Register(in=in, load=tc, out=oc);
    Register(in=in, load=td, out=od);
    Register(in=in, load=te, out=oe);
    Register(in=in, load=tf, out=of);
    Register(in=in, load=tg, out=og);
    Register(in=in, load=th, out=oh);

    Mux8Way16(a=oa, b=ob, c=oc, d=od, e=oe, f=of, g=og, h=oh, sel=address, out=out);
}